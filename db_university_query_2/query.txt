GROUP BY

1. Contare quanti iscritti ci sono stati ogni anno

	- SELECT YEAR(enrolment_date) AS "Year" , COUNT(*) AS "Enrolments"
	  FROM students
	  GROUP BY YEAR(enrolment_date)

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

	- SELECT office_address, COUNT(*) AS "teachers"
	  FROM teachers
	  GROUP BY office_address

3. Calcolare la media dei voti di ogni appello d'esame

	- SELECT exam_id, ROUND(AVG(vote), 2) AS "average vote"
	  FROM exam_student
	  GROUP BY exam_id

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
	
	- SELECT department_id, COUNT(*) AS "courses"	    OPPURE al posto di COUNT(*) => COUNT(name)
	  FROM degrees
	  GROUP BY department_id


JOIN

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia


	- SELECT students.*, degrees.name AS "degrees name"
	  FROM students
	  JOIN degrees
	  ON students.degree_id = degrees.id
	  WHERE degrees.name = "Corso di Laurea in Economia"


2. Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze


	- SELECT degrees.*, departments.name AS "department name"
	  FROM degrees
	  JOIN departments
	  ON degrees.department_id = departments.id
	  WHERE departments.name = "Dipartimento di Neuroscienze"


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)


	- SELECT courses.*, teachers.name AS "teacher name", teachers.surname AS "teacher surname", teachers.id AS "teacher id"
	  FROM teachers
	  JOIN course_teacher
    		  ON course_teacher.teacher_id = teachers.id
	  JOIN courses
    		  ON courses.id = course_teacher.course_id
	  WHERE teachers.name LIKE "Fulvio" AND teachers.surname LIKE "Amato"


4. Selezionare tutti gli studenti con relativo corso di laurea e relativo dipartimento, 
    in ordine alfabetico per cognome e nome


	- SELECT students.*, degrees.name AS "degree name", departments.name AS "department name"
	  FROM students
	  JOIN degrees
    		  ON students.degree_id = degrees.id
	  JOIN departments
    		  ON degrees.department_id = departments.id
	  ORDER BY students.surname, students.name


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

	
	Come BONUS ho ordinato i corsi per id e gli insegnati in ordine alfaberico per cognome e nome (pi√π pulito)

	- SELECT degrees.*, courses.name AS "course name", teachers.name AS "teacher name", teachers.surname AS "teacher surname"
	  FROM degrees
	  JOIN courses
    	  	  ON degrees.id = courses.degree_id
	  JOIN course_teacher
    		  ON courses.id = course_teacher.course_id
	  JOIN teachers
    		  ON course_teacher.teacher_id = teachers.id  
	  ORDER BY degrees.id ASC, teachers.surname ASC, teachers.name ASC


6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
	
	
	Come BONUS ho ordinato gli insegnati in ordine alfabetico per cognome e nome

	- SELECT DISTINCT departments.name AS "department name", teachers.*
	  FROM teachers
	  JOIN course_teacher
    		  ON teachers.id = course_teacher.teacher_id
	  JOIN courses
    		  ON course_teacher.course_id = courses.id
	  JOIN degrees
    		  ON courses.degree_id = degrees.id
	  JOIN departments
    		  ON degrees.department_id = departments.id
	  WHERE departments.name LIKE "Dipartimento di Matematica"
	  ORDER BY teachers.surname ASC, teachers.name ASC


7. BONUS: Selezionare per ogni studente quanti tentativi d'esame ha sostenuto per
superare ciascuno dei suoi esami


	- 

